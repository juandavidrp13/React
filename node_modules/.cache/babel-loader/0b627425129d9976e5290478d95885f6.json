{"ast":null,"code":"import services from '../services/api.services';\nexport const POST_CUSTOMERS = 'POST_CUSTOMERS';\nexport const POST_CUSTOMERS_ERROR = 'POST_CUSTOMERS_ERROR';\nexport const POST_CARS = 'POST_CARS';\nexport const POST_CARS_ERROR = 'POST_CARS_ERROR';\nexport const POST_DRIVERS = 'POST_DRIVERS';\nexport const POST_DRIVERS_ERROR = 'POST_DRIVERS_ERROR';\nexport const POST_RIDES = 'POST_RIDES';\nexport const POST_RIDES_ERROR = 'POST_RIDES_ERROR'; // GET\n\nexport const GET_CUSTOMERS = 'GET_CUSTOMERS';\nexport const GET_CUSTOMERS_ERROR = 'GET_CUSTOMERS_ERROR';\n/**\n * CUSTOMERS\n */\n\nexport const postCustomers = data => {\n  return dispatch => {\n    services.postCustomer(data).then(response => {\n      console.log(response);\n      dispatch(postCustomersAsync(response));\n    }).catch(error => {\n      console.log(error);\n      dispatch(postCustomersErrorAsync(error));\n    });\n  };\n};\nexport const postCustomersAsync = payload => ({\n  type: POST_CUSTOMERS,\n  payload: payload\n});\nexport const postCustomersErrorAsync = error => ({\n  type: POST_CUSTOMERS_ERROR,\n  error: error\n});\n/**\n * CUSTOMERS\n */\n\nexport const getCustomers = () => {\n  return dispatch => {\n    services.getCustomers().then(response => {\n      console.log(response);\n      dispatch(getCustomersAsync(response));\n    }).catch(error => {\n      console.log(error);\n      dispatch(getCustomersErrorAsync(error));\n    });\n  };\n};\nexport const getCustomersAsync = payload => ({\n  type: GET_CUSTOMERS,\n  payload: payload\n});\nexport const getCustomersErrorAsync = error => ({\n  type: GET_CUSTOMERS_ERROR,\n  error: error\n});\n/**\n * CARS\n */\n\nexport const postCars = data => {\n  return dispatch => {\n    services.postCar(data).then(response => {\n      console.log(response);\n      dispatch(postCarsAsync(response));\n    }).catch(error => {\n      console.log(error);\n      dispatch(postCarsErrorAsync(error));\n    });\n  };\n};\nexport const postCarsAsync = payload => ({\n  type: POST_CARS,\n  payload: payload\n});\nexport const postCarsErrorAsync = error => ({\n  type: POST_CARS_ERROR,\n  error: error\n});\n/**\n * DRIVERS\n */\n\nexport const postDrivers = data => {\n  return dispatch => {\n    services.postDriver(data).then(response => {\n      console.log(response);\n      dispatch(postDriversAsync(response));\n    }).catch(error => {\n      console.log(error);\n      dispatch(postDriversErrorAsync(error));\n    });\n  };\n};\nexport const postDriversAsync = payload => ({\n  type: POST_DRIVERS,\n  payload: payload\n});\nexport const postDriversErrorAsync = error => ({\n  type: POST_DRIVERS_ERROR,\n  error: error\n});\n/**\n * RIDES\n */\n\nexport const postRides = data => {\n  return dispatch => {\n    services.postRide(data).then(response => {\n      console.log(response);\n      dispatch(postRidesAsync(response));\n    }).catch(error => {\n      console.log(error);\n      dispatch(postRidesErrorAsync(error));\n    });\n  };\n};\nexport const postRidesAsync = payload => ({\n  type: POST_RIDES,\n  payload: payload\n});\nexport const postRidesErrorAsync = error => ({\n  type: POST_RIDES_ERROR,\n  error: error\n});","map":{"version":3,"sources":["/home/juan/Escritorio/ProjectoReact/src/store/actions.js"],"names":["services","POST_CUSTOMERS","POST_CUSTOMERS_ERROR","POST_CARS","POST_CARS_ERROR","POST_DRIVERS","POST_DRIVERS_ERROR","POST_RIDES","POST_RIDES_ERROR","GET_CUSTOMERS","GET_CUSTOMERS_ERROR","postCustomers","data","dispatch","postCustomer","then","response","console","log","postCustomersAsync","catch","error","postCustomersErrorAsync","payload","type","getCustomers","getCustomersAsync","getCustomersErrorAsync","postCars","postCar","postCarsAsync","postCarsErrorAsync","postDrivers","postDriver","postDriversAsync","postDriversErrorAsync","postRides","postRide","postRidesAsync","postRidesErrorAsync"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,0BAArB;AAEA,OAAO,MAAMC,cAAc,GAAG,gBAAvB;AACP,OAAO,MAAMC,oBAAoB,GAAG,sBAA7B;AAEP,OAAO,MAAMC,SAAS,GAAG,WAAlB;AACP,OAAO,MAAMC,eAAe,GAAG,iBAAxB;AAEP,OAAO,MAAMC,YAAY,GAAG,cAArB;AACP,OAAO,MAAMC,kBAAkB,GAAG,oBAA3B;AAEP,OAAO,MAAMC,UAAU,GAAG,YAAnB;AACP,OAAO,MAAMC,gBAAgB,GAAG,kBAAzB,C,CAGP;;AACA,OAAO,MAAMC,aAAa,GAAG,eAAtB;AACP,OAAO,MAAMC,mBAAmB,GAAG,qBAA5B;AAEP;;;;AAGA,OAAO,MAAMC,aAAa,GAAIC,IAAD,IAAU;AACnC,SAAOC,QAAQ,IAAI;AACjBb,IAAAA,QAAQ,CAACc,YAAT,CAAsBF,IAAtB,EACGG,IADH,CACQC,QAAQ,IAAK;AACjBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACAH,MAAAA,QAAQ,CAACM,kBAAkB,CAACH,QAAD,CAAnB,CAAR;AACD,KAJH,EAKGI,KALH,CAKSC,KAAK,IAAI;AACdJ,MAAAA,OAAO,CAACC,GAAR,CAAYG,KAAZ;AACAR,MAAAA,QAAQ,CAACS,uBAAuB,CAACD,KAAD,CAAxB,CAAR;AACD,KARH;AASD,GAVD;AAWD,CAZI;AAcP,OAAO,MAAMF,kBAAkB,GAAII,OAAD,KAAc;AAC9CC,EAAAA,IAAI,EAAEvB,cADwC;AAE9CsB,EAAAA,OAAO,EAAEA;AAFqC,CAAd,CAA3B;AAKP,OAAO,MAAMD,uBAAuB,GAAID,KAAD,KAAY;AACjDG,EAAAA,IAAI,EAAEtB,oBAD2C;AAEjDmB,EAAAA,KAAK,EAAEA;AAF0C,CAAZ,CAAhC;AAMP;;;;AAGA,OAAO,MAAMI,YAAY,GAAG,MAAM;AAChC,SAAOZ,QAAQ,IAAI;AACjBb,IAAAA,QAAQ,CAACyB,YAAT,GACGV,IADH,CACQC,QAAQ,IAAI;AAChBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACAH,MAAAA,QAAQ,CAACa,iBAAiB,CAACV,QAAD,CAAlB,CAAR;AACD,KAJH,EAKGI,KALH,CAKSC,KAAK,IAAI;AACdJ,MAAAA,OAAO,CAACC,GAAR,CAAYG,KAAZ;AACAR,MAAAA,QAAQ,CAACc,sBAAsB,CAACN,KAAD,CAAvB,CAAR;AACD,KARH;AASD,GAVD;AAWD,CAZM;AAcP,OAAO,MAAMK,iBAAiB,GAAIH,OAAD,KAAc;AAC7CC,EAAAA,IAAI,EAAEf,aADuC;AAE7Cc,EAAAA,OAAO,EAAEA;AAFoC,CAAd,CAA1B;AAKP,OAAO,MAAMI,sBAAsB,GAAIN,KAAD,KAAY;AAChDG,EAAAA,IAAI,EAAEd,mBAD0C;AAEhDW,EAAAA,KAAK,EAAEA;AAFyC,CAAZ,CAA/B;AAQP;;;;AAGA,OAAO,MAAMO,QAAQ,GAAIhB,IAAD,IAAU;AAC9B,SAAOC,QAAQ,IAAI;AACjBb,IAAAA,QAAQ,CAAC6B,OAAT,CAAiBjB,IAAjB,EACGG,IADH,CACQC,QAAQ,IAAK;AACjBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACAH,MAAAA,QAAQ,CAACiB,aAAa,CAACd,QAAD,CAAd,CAAR;AACD,KAJH,EAKGI,KALH,CAKSC,KAAK,IAAI;AACdJ,MAAAA,OAAO,CAACC,GAAR,CAAYG,KAAZ;AACAR,MAAAA,QAAQ,CAACkB,kBAAkB,CAACV,KAAD,CAAnB,CAAR;AACD,KARH;AASD,GAVD;AAWD,CAZI;AAcP,OAAO,MAAMS,aAAa,GAAIP,OAAD,KAAc;AACzCC,EAAAA,IAAI,EAAErB,SADmC;AAEzCoB,EAAAA,OAAO,EAAEA;AAFgC,CAAd,CAAtB;AAKP,OAAO,MAAMQ,kBAAkB,GAAIV,KAAD,KAAY;AAC5CG,EAAAA,IAAI,EAAEpB,eADsC;AAE5CiB,EAAAA,KAAK,EAAEA;AAFqC,CAAZ,CAA3B;AAMP;;;;AAGA,OAAO,MAAMW,WAAW,GAAIpB,IAAD,IAAU;AACjC,SAAOC,QAAQ,IAAI;AACjBb,IAAAA,QAAQ,CAACiC,UAAT,CAAoBrB,IAApB,EACGG,IADH,CACQC,QAAQ,IAAK;AACjBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACAH,MAAAA,QAAQ,CAACqB,gBAAgB,CAAClB,QAAD,CAAjB,CAAR;AACD,KAJH,EAKGI,KALH,CAKSC,KAAK,IAAI;AACdJ,MAAAA,OAAO,CAACC,GAAR,CAAYG,KAAZ;AACAR,MAAAA,QAAQ,CAACsB,qBAAqB,CAACd,KAAD,CAAtB,CAAR;AACD,KARH;AASD,GAVD;AAWD,CAZI;AAcP,OAAO,MAAMa,gBAAgB,GAAIX,OAAD,KAAc;AAC5CC,EAAAA,IAAI,EAAEnB,YADsC;AAE5CkB,EAAAA,OAAO,EAAEA;AAFmC,CAAd,CAAzB;AAKP,OAAO,MAAMY,qBAAqB,GAAId,KAAD,KAAY;AAC/CG,EAAAA,IAAI,EAAElB,kBADyC;AAE/Ce,EAAAA,KAAK,EAAEA;AAFwC,CAAZ,CAA9B;AAKP;;;;AAGA,OAAO,MAAMe,SAAS,GAAIxB,IAAD,IAAU;AAC/B,SAAOC,QAAQ,IAAI;AACjBb,IAAAA,QAAQ,CAACqC,QAAT,CAAkBzB,IAAlB,EACGG,IADH,CACQC,QAAQ,IAAK;AACjBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACAH,MAAAA,QAAQ,CAACyB,cAAc,CAACtB,QAAD,CAAf,CAAR;AACD,KAJH,EAKGI,KALH,CAKSC,KAAK,IAAI;AACdJ,MAAAA,OAAO,CAACC,GAAR,CAAYG,KAAZ;AACAR,MAAAA,QAAQ,CAAC0B,mBAAmB,CAAClB,KAAD,CAApB,CAAR;AACD,KARH;AASD,GAVD;AAWD,CAZI;AAcP,OAAO,MAAMiB,cAAc,GAAIf,OAAD,KAAc;AAC1CC,EAAAA,IAAI,EAAEjB,UADoC;AAE1CgB,EAAAA,OAAO,EAAEA;AAFiC,CAAd,CAAvB;AAKP,OAAO,MAAMgB,mBAAmB,GAAIlB,KAAD,KAAY;AAC7CG,EAAAA,IAAI,EAAEhB,gBADuC;AAE7Ca,EAAAA,KAAK,EAAEA;AAFsC,CAAZ,CAA5B","sourcesContent":["import services from '../services/api.services';\n\nexport const POST_CUSTOMERS = 'POST_CUSTOMERS';\nexport const POST_CUSTOMERS_ERROR = 'POST_CUSTOMERS_ERROR';\n\nexport const POST_CARS = 'POST_CARS';\nexport const POST_CARS_ERROR = 'POST_CARS_ERROR';\n\nexport const POST_DRIVERS = 'POST_DRIVERS';\nexport const POST_DRIVERS_ERROR = 'POST_DRIVERS_ERROR';\n\nexport const POST_RIDES = 'POST_RIDES';\nexport const POST_RIDES_ERROR = 'POST_RIDES_ERROR';\n\n\n// GET\nexport const GET_CUSTOMERS = 'GET_CUSTOMERS';\nexport const GET_CUSTOMERS_ERROR = 'GET_CUSTOMERS_ERROR';\n\n/**\n * CUSTOMERS\n */\nexport const postCustomers = (data) => {\n    return dispatch => {\n      services.postCustomer(data)\n        .then(response  => {\n          console.log(response);\n          dispatch(postCustomersAsync(response));\n        })\n        .catch(error => {\n          console.log(error);\n          dispatch(postCustomersErrorAsync(error));\n        });\n    }\n  }\n  \nexport const postCustomersAsync = (payload) => ({\n  type: POST_CUSTOMERS,\n  payload: payload\n});\n\nexport const postCustomersErrorAsync = (error) => ({\n  type: POST_CUSTOMERS_ERROR,\n  error: error\n});\n\n\n/**\n * CUSTOMERS\n */\nexport const getCustomers = () => {\n  return dispatch => {\n    services.getCustomers()\n      .then(response => {\n        console.log(response);\n        dispatch(getCustomersAsync(response));\n      })\n      .catch(error => {\n        console.log(error);\n        dispatch(getCustomersErrorAsync(error));\n      });\n  }\n}\n\nexport const getCustomersAsync = (payload) => ({\n  type: GET_CUSTOMERS,\n  payload: payload\n});\n\nexport const getCustomersErrorAsync = (error) => ({\n  type: GET_CUSTOMERS_ERROR,\n  error: error\n});\n\n\n\n\n/**\n * CARS\n */\nexport const postCars = (data) => {\n    return dispatch => {\n      services.postCar(data)\n        .then(response  => {\n          console.log(response);\n          dispatch(postCarsAsync(response));\n        })\n        .catch(error => {\n          console.log(error);\n          dispatch(postCarsErrorAsync(error));\n        });\n    }\n  }\n  \nexport const postCarsAsync = (payload) => ({\n  type: POST_CARS,\n  payload: payload\n});\n\nexport const postCarsErrorAsync = (error) => ({\n  type: POST_CARS_ERROR,\n  error: error\n});\n\n\n/**\n * DRIVERS\n */\nexport const postDrivers = (data) => {\n    return dispatch => {\n      services.postDriver(data)\n        .then(response  => {\n          console.log(response);\n          dispatch(postDriversAsync(response));\n        })\n        .catch(error => {\n          console.log(error);\n          dispatch(postDriversErrorAsync(error));\n        });\n    }\n  }\n  \nexport const postDriversAsync = (payload) => ({\n  type: POST_DRIVERS,\n  payload: payload\n});\n\nexport const postDriversErrorAsync = (error) => ({\n  type: POST_DRIVERS_ERROR,\n  error: error\n});\n\n/**\n * RIDES\n */\nexport const postRides = (data) => {\n    return dispatch => {\n      services.postRide(data)\n        .then(response  => {\n          console.log(response);\n          dispatch(postRidesAsync(response));\n        })\n        .catch(error => {\n          console.log(error);\n          dispatch(postRidesErrorAsync(error));\n        });\n    }\n  }\n  \nexport const postRidesAsync = (payload) => ({\n  type: POST_RIDES,\n  payload: payload\n});\n\nexport const postRidesErrorAsync = (error) => ({\n  type: POST_RIDES_ERROR,\n  error: error\n});\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}